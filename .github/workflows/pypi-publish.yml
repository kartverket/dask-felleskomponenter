name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be published"
        required: true
        default: "0.0.1"
        type: string
      push_version_number_to_github:
        description: "Push the given version number to Github"
        required: true
        default: true
        type: boolean
      publish_pypi:
        description: "Publish to PyPI"
        required: true
        default: false
        type: boolean
      publish_testpypi:
        description: "Publish to TestPyPI"
        required: true
        default: true
        type: boolean


permissions:
  id-token: write # Required for Octo STS


jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    environment: pypi-publish
    steps:
      - uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
        id: octo-sts
        with:
          scope: kartverket/dask-felleskomponenter
          identity: "dask-felleskomponenter"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.octo-sts.outputs.token }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Bump version in setup.py
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml

      - name: Commit changes to repo
        if: fromJson(github.event.inputs.push_version_number_to_github)
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "noreply@kartverket.no"
          git commit -am "Bump dask-felleskomponenter PyPI package version to ${{ github.event.inputs.version }}"
          git push

      - name: Build the package
        run: |
          python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: fromJson(github.event.inputs.publish_pypi)
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/dask-felleskomponenter
      
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if: fromJson(github.event.inputs.publish_testpypi)
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/dask-felleskomponenter

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
