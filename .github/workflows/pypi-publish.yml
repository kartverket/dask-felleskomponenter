name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be published"
        required: true
        default: "0.0.1"
        type: string
      push_version_update_to_github:
        description: "Push version change in setup.py to Github"
        required: true
        default: true
        type: boolean
      push_package_to_pypi:
        description: "Push package to PyPI"
        required: true
        default: true
        type: boolean
      push_package_to_testpypi:
        description: "Push package to TestPyPI"
        required: true
        default: false
        type: boolean


permissions:
  id-token: write # Required for Octo STS


jobs:
  publish:
    runs-on: ubuntu-latest
    environment: pypi-publish
    steps:
      - uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
        id: octo-sts
        with:
          scope: kartverket/dask-felleskomponenter
          identity: "dask-felleskomponenter"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.octo-sts.outputs.token }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Bump version in setup.py
        run: |
          sed -i "s/version=\"[^\"]*\"/version=\"${{ github.event.inputs.version }}\"/" setup.py

      - name: Commit changes to repo
        if: ${{ fromJson(github.event.inputs.push_version_update_to_github) }}
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "noreply@kartverket.no"
          git commit -am "Bump dask-felleskomponenter PyPI package version to ${{ github.event.inputs.version }}"
          git push

      - name: Build the package
        run: |
          python3 -m build

      - name: Publish to PyPI
        if: ${{ fromJson(github.event.inputs.push_package_to_pypi) }}
        run: |
          python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish to TestPyPI
        if: ${{ fromJson(github.event.inputs.push_package_to_testpypi) }}
        run: |
          python3 -m twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
